Map.addLayer(AOI,{},'Area of interest')
Map.centerObject(AOI,4)
var nm = 'AOI'
var year = '2018'
//DEFINE A var = AOI
//VISUALIZATION SETTINGS#######################################################################################################################
var NO2_viz = {
  min: 0.13,
  max: 0.45,
  palette: ['black', 'blue', 'purple', 'cyan', 'green', 'yellow', 'red']
}
var CH4_viz = {
  min: 1750,
  max: 1900,
  palette: ['black', 'blue', 'purple', 'cyan', 'green', 'yellow', 'red']
};
var Temp_viz = {
  bands: ['temperature_2m_mean'],
  min: 250.0,
  max: 320.0,
  palette: [
    '000080', '0000d9', '4000ff', '8000ff', '0080ff', '00ffff',
    '00ff80', '80ff00', 'daff00', 'ffff00', 'fff500', 'ffda00',
    'ffb000', 'ffa400', 'ff4f00', 'ff2500', 'ff0a00', 'ff00ff',
  ]
}
var Speed_vis = {
  bands: ['windspeed_mean'],
  min: 0,
  max: 10,
  palette: [
    '000080', '0000d9', '4000ff', '8000ff', '0080ff', '00ffff',
    '00ff80', '80ff00', 'daff00', 'ffff00', 'fff500', 'ffda00',
    'ffb000', 'ffa400', 'ff4f00', 'ff2500', 'ff0a00', 'ff00ff',
  ]
}
var Dir_vis = {
  bands: ['winddir_mean'],
  min: 0,
  max: 359,
  palette: [
    '000080', '0000d9', '4000ff', '8000ff', '0080ff', '00ffff',
    '00ff80', '80ff00', 'daff00', 'ffff00', 'fff500', 'ffda00',
    'ffb000', 'ffa400', 'ff4f00', 'ff2500', 'ff0a00', 'ff00ff',
  ]
}
var Fire_vis = {
  min: 30.0,
  max: 341.0,
  palette: ['4e0400', '951003', 'c61503', 'ff1901'],
};

function pad(number) {
  return (number < 10 ? '0' : '') + number;
}// Function to pad a number with a leading zero

// Loop through each month
for (var i = 1; i <= 12; i++) {
  // Define the start and end date for each month
  var st = year+'-' + pad(i) + '-01';
  var fn = ee.Date(st).advance(1, 'month').advance(-1, 'day').format('YYYY-MM-dd');
  
  //NO2##########################################################################################################################################
  var molecularWeightNO2 = 46.0055 // g/mol
  var heightTroposphere = 10 // Estimated height of the tropospheric layer in km
  
  // Filter the ImageCollection for the current month
  var NO2 = ee.ImageCollection("COPERNICUS/S5P/OFFL/L3_NO2")
    .select('NO2_column_number_density')
    .filterDate(st, fn)
    .filterBounds(AOI)
  var NO2_AOI = NO2.map(function(image) {
    return image.clip(AOI)})//Clip to AOI
  var NO2_To_Con = function(image) {
    return image
    .divide(heightTroposphere * 1000) // Convert height to meters**
    .multiply(molecularWeightNO2 * 1e6) // Convert to µg/m³
    .rename('NO2_concentration')// Function to convert NO2 column number density to concentration in µg/m³
  }
  var avr_NO2_Con = NO2_AOI.map(NO2_To_Con)//get the average 
    .reduce(ee.Reducer.mean())
  
  //Export.image.toDrive({
    //image: avr_NO2_Con,  
    //description: year+'-'+pad(i)+'_'+nm+'_NO2',
    //folder: "TIFF_NO2", 
    //region: AOI,
    //fileFormat: "GEOTIFF"
  //})//export the image to drive
  //Map.addLayer(avr_NO2_Con,NO2_viz,'NO2'+'-'+pad(i))//add the layer to the map
  
  //CH4##########################################################################################################################################
  var CH4 = ee.ImageCollection("COPERNICUS/S5P/OFFL/L3_CH4")
    .select('CH4_column_volume_mixing_ratio_dry_air_bias_corrected')
    .filterDate(st, fn)
    .filterBounds(AOI)
  var CH4_AOI = CH4.map(function(image) {
    return image.clip(AOI)})//Clip to AOI
  var avr_CH4 = CH4_AOI.reduce(ee.Reducer.mean())//get the average 
  //Export.image.toDrive({
    //image: avr_CH4,  
    //description: year+'-'+pad(i)+'_'+nm+'_CH4',
    //folder: "TIFF_CH4", 
    //region: AOI,
    //fileFormat: "GEOTIFF"
    
  //})//export the image to drive
  //Map.addLayer(avr_CH4,CH4_viz,'CH4')//add the layer to the map
  
  //Temperature######################################################################################################################################################################################################################################
  var Temp = ee.ImageCollection("ECMWF/ERA5/HOURLY")
            .select('temperature_2m')
            .filterDate(st, fn)
            .filterBounds(AOI)
  var Temp_AOI = Temp.map(function(image) {
    return image.clip(AOI)})
  var avr_Temp = Temp_AOI.reduce(ee.Reducer.mean())
  //Export.image.toDrive({
    //image: avr_Temp,  
    //description: year+'-'+pad(i)+'_'+nm+'_Temp_2m', 
    //folder: "Temp_2m", 
    //region: AOI,
    //fileFormat: "GEOTIFF"
  //})
  //Map.addLayer(avr_Temp,Temp_viz,'Temp_2m')
  
  //Fires######################################################################################################################################################################################################################################
  var fire = ee.ImageCollection('MODIS/061/MCD64A1')
                    .filter(ee.Filter.date(st, fn))
                    .filterBounds(AOI);
  var burnedArea = fire.select('BurnDate');
  var maxBA = burnedArea.max();
  var Fires_AOI = maxBA.clip(AOI)
  Export.image.toDrive({
    image: Fires_AOI,  
    description: year+'-'+pad(i)+'_'+nm+'_Fires', 
    folder: "Fires", 
    region: AOI,
    fileFormat: "GEOTIFF"
  })
  Map.addLayer(Fires_AOI,Fire_vis,'Fire_'+year+'_'+pad(i))
  
  //Wind - U_component and V_Component ######################################################################################################################################################################################################################################
  var U_wind = ee.ImageCollection("ECMWF/ERA5/HOURLY")
            .select('u_component_of_wind_10m')
            .filterDate(st, fn)
            .filterBounds(AOI)
  var Uw_AOI = U_wind.map(function(image) {
    return image.clip(AOI)})
  var avr_Uw = Uw_AOI.reduce(ee.Reducer.mean())
  //Export.image.toDrive({
    //image: avr_Uw,  
    //description: year+'-'+pad(i)+'_'+nm+'_U_wind_10m', 
    //folder: "Wind", 
    //region: AOI,
    //fileFormat: "GEOTIFF"
  //})
  var V_wind = ee.ImageCollection("ECMWF/ERA5/HOURLY")
            .select('v_component_of_wind_10m')
            .filterDate(st, fn)
            .filterBounds(AOI)
  var Vw_AOI = V_wind.map(function(image) {
    return image.clip(AOI)})
  var avr_Vw = Vw_AOI.reduce(ee.Reducer.mean())
  //Export.image.toDrive({
    //image: avr_Vw,  
    //description: year+'-'+pad(i)+'_'+nm+'_V_wind_10m', 
    //folder: "Wind", 
    //region: AOI,
    //fileFormat: "GEOTIFF"
  //})
  
  //Speed and Dir ##################################################################################################################################################################################################################################################
  var ERA5_SN = ee.ImageCollection("ECMWF/ERA5/HOURLY") //Setup
       .filterDate(st, fn)
       .filterBounds(AOI)
  var W_speed = ERA5_SN.map(function(image){
    var wind_10m = image.expression(
      'sqrt(u**2 + v**2)', {
        'u': image.select('u_component_of_wind_10m'),
        'v': image.select('v_component_of_wind_10m')
    }).rename('windspeed');
    var time = image.get('system:time_start');
    return wind_10m.set('system:time_start', time) } )//Calculate wind speed as windspeed band
  var meanspeed = W_speed.map(function(image){
    var meandict = image.select('windspeed').reduceRegion({
      reducer: ee.Reducer.mean(),
      geometry: AOI
    })
    return image.set(meandict); 
  })//Calculate mean wind speed per day
  var AOI_Speed = meanspeed.map(function(image) {
    return image.clip(AOI);
  })//Clip it for the AOI
  var avr_Speed = AOI_Speed.reduce(ee.Reducer.mean())
  //Map.addLayer(avr_Speed,Speed_vis,'W_Speed')
  //Export.image.toDrive({
    //image: avr_Speed,  
    //description: year+'-'+pad(i)+'_'+nm+'_mean_wind_speed', 
    //folder: "Wind", 
    //region: AOI,
    //fileFormat: "GEOTIFF"
  //})

  var W_dir = ERA5_SN.map(function(image){
    var winddir = image.expression(
      'mod(180 + (180/3.14) * atan2(v,u),360)', { //**
        'u': image.select('u_component_of_wind_10m'),
        'v': image.select('v_component_of_wind_10m')
    }).rename('winddir')
    var time = image.get('system:time_start')
    return winddir.set('system:time_start', time) } )//Calculate wind direction as winddir band
  var meandir = W_dir.map(function(image){
    var meandict = image.select('winddir').reduceRegion({
      reducer: ee.Reducer.mean(),
      geometry: AOI
    })
    return image.set(meandict)
  })//Calculate mean wind direction per day
  var AOI_Dir = meandir.map(function(image) {
    return image.clip(AOI)
  })//Clip it for the AOI
  var avr_Dir = AOI_Dir.reduce(ee.Reducer.mean())
  //Map.addLayer(avr_Dir,Dir_vis,'W_Dir')
  //Export.image.toDrive({
    //image: avr_Dir,  
    //description: year+'-'+pad(i)+'_'+nm+'_mean_wind_dir', 
    //folder: "Wind", 
    //region: AOI,
    //fileFormat: "GEOTIFF"
  //})
  //print (year+'-'+pad(i))
  
}
